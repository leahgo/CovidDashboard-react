[{"D:\\vue\\CovidDashboard\\src\\index.js":"1","D:\\vue\\CovidDashboard\\src\\App.js":"2","D:\\vue\\CovidDashboard\\src\\reportWebVitals.js":"3","D:\\vue\\CovidDashboard\\src\\Components\\Covid.js":"4","D:\\vue\\CovidDashboard\\src\\Components\\Covid.presenter.js":"5","D:\\vue\\CovidDashboard\\src\\Components\\Chart.js":"6","D:\\vue\\CovidDashboard\\src\\Components\\GenAge.js":"7"},{"size":589,"mtime":1618886239647,"results":"8","hashOfConfig":"9"},{"size":452,"mtime":1618886239645,"results":"10","hashOfConfig":"9"},{"size":375,"mtime":1618886239648,"results":"11","hashOfConfig":"9"},{"size":4632,"mtime":1618886239646,"results":"12","hashOfConfig":"9"},{"size":3344,"mtime":1618893066180,"results":"13","hashOfConfig":"9"},{"size":5829,"mtime":1618886239645,"results":"14","hashOfConfig":"9"},{"size":775,"mtime":1618886239646,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1cn8u4b",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"D:\\vue\\CovidDashboard\\src\\index.js",[],["32","33"],"D:\\vue\\CovidDashboard\\src\\App.js",[],"D:\\vue\\CovidDashboard\\src\\reportWebVitals.js",[],"D:\\vue\\CovidDashboard\\src\\Components\\Covid.js",["34"],"import React, { useState } from \"react\";\r\nimport CovidPresenter from \"./Covid.presenter\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\nconst Covid = () => {\r\n  const [lineChartData, setLineChartData] = useState([]);\r\n  const [ageData, setAgeData] = useState([]);\r\n  const [genData, setGenData] = useState([]);\r\n  const handleButtonClick = (startDt, endDt) => {\r\n    console.log(startDt, endDt);\r\n\r\n    setLineChart(startDt, endDt);\r\n    setGenAgeCase(startDt, endDt);\r\n  };\r\n\r\n  const setLineChart = async (startDt, endDt) => {\r\n    // console.log(\"clicked\");\r\n    console.log(\r\n      \"startDt:\" +\r\n        moment(startDt).format(\"YYYYMMDD\") +\r\n        \"/endDt:\" +\r\n        moment(endDt).format(\"YYYYMMDD\")\r\n    );\r\n    const url =\r\n      \"http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19InfStateJson\";\r\n    const ServiceKey =\r\n      \"pazBdlMEQ8jBn1ovS4UfBWEMzypVRd5jPd887GygCIAQWJYJWbzAcAn3w5jaYyPN3lwpX69kUb6dl3rbeMgAww%3D%3D\";\r\n    let pageNo = \"1\";\r\n    let numOfRows = \"10\";\r\n    let startCreateDt = moment(startDt).format(\"YYYYMMDD\");\r\n    let endCreateDt = moment(endDt).format(\"YYYYMMDD\");\r\n    let tmpArr = [];\r\n\r\n    console.log(\r\n      \"url\",\r\n      url +\r\n        \"?ServiceKey=\" +\r\n        ServiceKey +\r\n        \"&pageNo=\" +\r\n        pageNo +\r\n        \"&numOfRows=\" +\r\n        numOfRows +\r\n        \"&startCreateDt=\" +\r\n        startCreateDt +\r\n        \"&endCreateDt=\" +\r\n        endCreateDt\r\n    );\r\n\r\n    const response = await axios.get(\r\n      url +\r\n        \"?ServiceKey=\" +\r\n        ServiceKey +\r\n        \"&pageNo=\" +\r\n        pageNo +\r\n        \"&numOfRows=\" +\r\n        numOfRows +\r\n        \"&startCreateDt=\" +\r\n        startCreateDt +\r\n        \"&endCreateDt=\" +\r\n        endCreateDt\r\n    );\r\n    // console.log(response.data);\r\n\r\n    if (response.data.response.header.resultCode === \"00\") {\r\n      if (response.data.response.body.items.length !== 0) {\r\n        tmpArr = response.data.response.body.items.item;\r\n        if (tmpArr.length > 1) {\r\n          tmpArr.reverse();\r\n        } else {\r\n          tmpArr = [];\r\n          tmpArr.push(response.data.response.body.items.item);\r\n        }\r\n        setLineChartData(tmpArr);\r\n      } else {\r\n        console.log(\r\n          \"error : \",\r\n          response.data.response.header.resultCode,\r\n          response.data.response.header.resultMsg\r\n        );\r\n      }\r\n    }\r\n    // console.log(\"data\", data);\r\n  };\r\n\r\n  const setGenAgeCase = async (startDt, endDt) => {\r\n    console.log(\r\n      \"startDt:\" +\r\n        moment(startDt).format(\"YYYYMMDD\") +\r\n        \"/endDt:\" +\r\n        moment(endDt).format(\"YYYYMMDD\")\r\n    );\r\n    const url =\r\n      \"http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19GenAgeCaseInfJson\";\r\n    const ServiceKey =\r\n      \"pazBdlMEQ8jBn1ovS4UfBWEMzypVRd5jPd887GygCIAQWJYJWbzAcAn3w5jaYyPN3lwpX69kUb6dl3rbeMgAww%3D%3D\";\r\n    let pageNo = \"1\";\r\n    let numOfRows = \"10\";\r\n    let startCreateDt = moment(startDt).format(\"YYYYMMDD\");\r\n    let endCreateDt = moment(endDt).format(\"YYYYMMDD\");\r\n    let tmpArr = [];\r\n\r\n    console.log(\r\n      \"url\",\r\n      url +\r\n        \"?ServiceKey=\" +\r\n        ServiceKey +\r\n        \"&pageNo=\" +\r\n        pageNo +\r\n        \"&numOfRows=\" +\r\n        numOfRows +\r\n        \"&startCreateDt=\" +\r\n        startCreateDt +\r\n        \"&endCreateDt=\" +\r\n        endCreateDt\r\n    );\r\n\r\n    const response = await axios.get(\r\n      url +\r\n        \"?ServiceKey=\" +\r\n        ServiceKey +\r\n        \"&pageNo=\" +\r\n        pageNo +\r\n        \"&numOfRows=\" +\r\n        numOfRows +\r\n        \"&startCreateDt=\" +\r\n        endCreateDt +\r\n        \"&endCreateDt=\" +\r\n        endCreateDt\r\n    );\r\n    console.log(response.data);\r\n\r\n    if (response.data.response.header.resultCode === \"00\") {\r\n      let tmpAge = [];\r\n      let tmpGen = [];\r\n      // console.log(response.data.response.body.items.length);\r\n      if (response.data.response.body.items.length !== 0) {\r\n        tmpArr = response.data.response.body.items.item;\r\n        if (tmpArr === []) return;\r\n        if (tmpArr.length > 1) tmpArr.reverse();\r\n\r\n        tmpArr.map((i) => {\r\n          if (i.gubun === \"여성\" || i.gubun === \"남성\") {\r\n            tmpGen.push(i);\r\n          } else {\r\n            tmpAge.push(i);\r\n          }\r\n          // console.log(\"tmpGen\", tmpGen);\r\n          // console.log(\"tmpAge\", tmpAge);\r\n          setAgeData(tmpAge);\r\n          setGenData(tmpGen);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CovidPresenter\r\n      lineChartData={lineChartData}\r\n      genData={genData}\r\n      ageData={ageData}\r\n      handleButtonClick={handleButtonClick}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Covid;\r\n","D:\\vue\\CovidDashboard\\src\\Components\\Covid.presenter.js",[],"D:\\vue\\CovidDashboard\\src\\Components\\Chart.js",[],"D:\\vue\\CovidDashboard\\src\\Components\\GenAge.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":142,"column":24,"nodeType":"41","messageId":"42","endLine":142,"endColumn":26},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]